server.port=8080
spring.application.name=ChatBackend
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver

#server when using local docker=compose dockerfile
spring.datasource.url=jdbc:mysql://192.168.99.100:3306/chatdb
spring.datasource.username=backend
spring.datasource.password=interlocutor500

#spring.datasource.url=jdbc:mysql://51.38.133.76:3306/chatdbnew?verifyServerCertificate=false&useSSL=false&requireSSL=false
#spring.datasource.username=root
#spring.datasource.password=mysqlroot404

spring.jpa.show-sql=true

#prevently exception on duplicate data in database
spring.datasource.continue-on-error=true
spring.datasource.initialization-mode=always

#logger settings
logging.level.org.springframework=INFO
logging.level.com.howtodoinjava=INFO

#output to a temp_folder/file
logging.file=${java.io.tmpdir}/application.log

# Logging pattern for file
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%

logging.level.com.wildBirds.BlueChat.api.rest.controllers.ChannelController=debug
logging.level.com.wildBirds.BlueChat.api.rest.controllers.ChannelsMessageController=debug
logging.level.com.wildBirds.BlueChat.api.rest.controllers.MessageController=debug
logging.level.com.wildBirds.BlueChat.api.rest.controllers.RpsController=debug
logging.level.com.wildBirds.BlueChat.api.rest.controllers.UserController=debug
logging.level.com.wildBirds.BlueChat.api.webSocket.controllers.MessageControllerWSR=debug